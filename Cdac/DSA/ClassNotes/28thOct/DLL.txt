Advantages of DLL over the singly linked list:

1) A DLL can be traversed in both forward and backward directions. 


2) The delete operation in DLL is more efficient if a reference to the node to be deleted is given. 

	say node C is to be deleted. We will ask temp to refer to C.	

	temp.prev.next = temp.next  
	temp.next.prev = temp.prev

	

3) We can quickly insert a new node after a given node. 

	1) temp is node B after which a new node is to be inserted
	2) n is the new node

	n.next = temp.next (n's next is looking at C)
	temp.next.prev = n (C's prev is looking at n now)	
	temp.next = n	 (temp's next is looking at n now)
	n.prev = temp;	(n's prev is looking at temp now)


4) In a singly linked list, to delete a node, a pointer to the previous node is needed. To get this previous node, sometimes the list is traversed. In DLL, we can get the previous node using the previous pointer. 


Disadvantages of DLL over the singly linked list:

1) Every node of DLL Requires extra space for a previous pointer. 

2) All operations require an extra pointer previous to be maintained. For example, in insertion, we need to modify previous pointers together with the next pointers. 



